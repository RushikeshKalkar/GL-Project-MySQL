use orders;
show tables;
select * from product;


## Question 1
SELECT P.PRODUCT_CLASS_CODE, P.PRODUCT_ID, P.PRODUCT_DESC, 
CASE P.PRODUCT_CLASS_CODE  
WHEN 2050 THEN product_price + 2000 
WHEN 2051 THEN product_price + 500 
WHEN 2052 THEN product_price + 600 
ELSE PRODUCT_PRICE 
END PRODUCT_PRICE 
FROM PRODUCT P
ORDER BY PRODUCT_CLASS_CODE desc; 

##Question 2
SELECT PC.PRODUCT_CLASS_DESC AS 'Product Category',
 P.PRODUCT_ID AS 'Product ID', 
 P.PRODUCT_DESC AS 'Product Description', 
 P.PRODUCT_QUANTITY_AVAIL AS 'Product Availability', 
 CASE   
 WHEN PC.PRODUCT_CLASS_CODE IN (2050,2053) THEN 
 CASE 
 WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock' -- Out of stock criteria 
 WHEN P.PRODUCT_QUANTITY_AVAIL <=10 THEN 'Low stock' 
 WHEN (P.PRODUCT_QUANTITY_AVAIL >=11 AND P.PRODUCT_QUANTITY_AVAIL <=30) THEN 'In stock' 
 WHEN (PRODUCT_QUANTITY_AVAIL >=31) THEN 'Enough stock' 
 END  
 WHEN PC.PRODUCT_CLASS_CODE IN (2052,2056) THEN 
 CASE 
 WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock' -- Out of stock criteria 
 WHEN P.PRODUCT_QUANTITY_AVAIL <=20 THEN 'Low stock' 
 WHEN (P.PRODUCT_QUANTITY_AVAIL >=21 AND P.PRODUCT_QUANTITY_AVAIL <=80) THEN 'In stock' 
 WHEN (PRODUCT_QUANTITY_AVAIL >=81) THEN 'Enough stock' 
 END 
 ELSE 
 CASE 
 WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock' -- Out of stock criteria 
 WHEN P.PRODUCT_QUANTITY_AVAIL <=15 THEN 'Low stock' 
 WHEN (P.PRODUCT_QUANTITY_AVAIL >=16 AND P.PRODUCT_QUANTITY_AVAIL <=50) THEN 'In stock' 
 WHEN (PRODUCT_QUANTITY_AVAIL >=51) THEN 'Enough stock' 
 END 
END  'Inventory Status' 
FROM PRODUCT P 
INNER JOIN PRODUCT_CLASS PC 
ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE 
ORDER BY P.PRODUCT_CLASS_CODE,P.PRODUCT_QUANTITY_AVAIL DESC;

##question 3


select country,count(distinct(CITY)) Number_of_Cities
from address
where country not in ('USA','Malaysia')
group by country
having Number_of_Cities  > 1
order by Number_of_Cities desc;




##question 4


 SELECT DISTINCT(C.CUSTOMER_ID),CONCAT(C.CUSTOMER_FNAME,' ', C.CUSTOMER_LNAME) AS CUSTOMER_NAME, 
  H.ORDER_DATE, (I.PRODUCT_QUANTITY*P.PRODUCT_PRICE) as SUBTOTAL, 
  A.CITY, A.PINCODE, H.ORDER_ID, CL.PRODUCT_CLASS_DESC, P.PRODUCT_DESC
  FROM ONLINE_CUSTOMER AS C INNER JOIN ADDRESS AS A
  ON A.ADDRESS_ID = C.ADDRESS_ID
  INNER JOIN ORDER_HEADER AS H
  ON H.CUSTOMER_ID = C.CUSTOMER_ID
  INNER JOIN ORDER_ITEMS AS I
  ON H.ORDER_ID = I.ORDER_ID
  INNER JOIN PRODUCT AS P
  ON I.PRODUCT_ID = P.PRODUCT_ID
  INNER JOIN PRODUCT_CLASS AS CL
  ON P.PRODUCT_CLASS_CODE = CL.PRODUCT_CLASS_CODE
  WHERE convert(A.PINCODE,CHAR) NOT LIKE '%0%' AND H.ORDER_STATUS='SHIPPED'
  ORDER BY CUSTOMER_NAME, ORDER_DATE, SUBTOTAL;

##Question 5
SELECT OI.PRODUCT_ID,P.PRODUCT_DESC, SUM(OI.PRODUCT_QUANTITY) AS Total_Quantity  
FROM ORDER_ITEMS OI 
INNER JOIN PRODUCT P 
ON P.PRODUCT_ID = OI.PRODUCT_ID  
WHERE OI.ORDER_ID IN  
( 
SELECT DISTINCT ORDER_ID 
FROM ORDER_ITEMS A 
WHERE PRODUCT_ID = 201 )
AND OI.PRODUCT_ID >= 201
GROUP BY OI.PRODUCT_ID 
ORDER BY Total_Quantity 
DESC LIMIT 1; 

##Question 6
SELECT OC.CUSTOMER_ID, CONCAT(OC.CUSTOMER_FNAME,' ',OC.CUSTOMER_LNAME) AS 
CUSTOMER_FULL_NAME, OC.CUSTOMER_EMAIL, O.ORDER_ID, 
P.PRODUCT_DESC, OI.PRODUCT_QUANTITY, (OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS SUBTOTAL 
FROM ONLINE_CUSTOMER OC 
INNER JOIN ADDRESS A 
ON OC.ADDRESS_ID = A.ADDRESS_ID 
LEFT JOIN ORDER_HEADER O 
ON OC.CUSTOMER_ID = O.CUSTOMER_ID 
LEFT JOIN ORDER_ITEMS OI 
ON O.ORDER_ID = OI.ORDER_ID 
LEFT JOIN PRODUCT P 
ON OI.PRODUCT_ID = P.PRODUCT_ID 
LEFT JOIN PRODUCT_CLASS PC 
ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE;

## Question 7
SELECT C.CARTON_ID, (C.LEN*C.WIDTH*C.HEIGHT) as CARTON_VOL  
FROM ORDERS.CARTON C 
WHERE (C.LEN*C.WIDTH*C.HEIGHT) >= ( SELECT SUM(P.LEN*P.WIDTH*P.HEIGHT*PRODUCT_QUANTITY) AS VOL 
FROM ORDERS.ORDER_HEADER OH 
INNER JOIN ORDERS.ORDER_ITEMS OI 
ON OH.ORDER_ID = OI.ORDER_ID 
INNER JOIN ORDERS.PRODUCT P 
ON OI.PRODUCT_ID = P.PRODUCT_ID  
WHERE OH.ORDER_ID =10006 
) 
ORDER BY (C.LEN*C.WIDTH*C.HEIGHT) ASC LIMIT 1;


# Question 8
SELECT OC.CUSTOMER_ID AS Customer_ID,  CONCAT(CUSTOMER_FNAME,' ',CUSTOMER_LNAME) AS Customer_FullName, 
OH.ORDER_ID AS Order_ID,  SUM(OI.PRODUCT_QUANTITY) AS Total_Order_Quantity 
FROM ONLINE_CUSTOMER OC 
INNER JOIN ORDER_HEADER OH 
ON OH.CUSTOMER_ID = OC.CUSTOMER_ID 
INNER JOIN ORDER_ITEMS OI ON OI.ORDER_ID = OH.ORDER_ID 
WHERE OH.ORDER_STATUS = 'Shipped' AND OH.PAYMENT_MODE IN ('CREDIT CARD','NET BANKING')
GROUP BY OH.ORDER_ID  
HAVING Total_Order_Quantity > 10 
ORDER BY CUSTOMER_ID;

##Question 9
SELECT OH.ORDER_ID,OH.CUSTOMER_ID,CONCAT(OC.CUSTOMER_FNAME,' ',OC.CUSTOMER_LNAME) AS CUSTOMER_FULLNAME,
SUM(OI.PRODUCT_QUANTITY) AS Total_Order_Quantity
FROM ONLINE_CUSTOMER OC
INNER JOIN ORDER_HEADER OH 
ON OH.CUSTOMER_ID = OC.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON OI.ORDER_ID = OH.ORDER_ID
WHERE OH.ORDER_STATUS = 'Shipped' 
AND OH.ORDER_ID > 10030 
AND OC.CUSTOMER_FNAME LIKE 'A%'
GROUP BY OH.ORDER_ID
ORDER BY CUSTOMER_FULLNAME;

##Question 10

SELECT PC.PRODUCT_CLASS_CODE AS Product_Class_Code, 
PC.PRODUCT_CLASS_DESC AS Product_Class_Description, 
SUM(OI.PRODUCT_QUANTITY) AS Total_Quantity, 
SUM(OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS Total_Value 
FROM ORDER_ITEMS OI 
INNER JOIN ORDER_HEADER OH ON OH.ORDER_ID = OI.ORDER_ID 
INNER JOIN ONLINE_CUSTOMER OC ON OC.CUSTOMER_ID = OH.CUSTOMER_ID  
INNER JOIN PRODUCT P ON P.PRODUCT_ID = OI.PRODUCT_ID  
INNER JOIN PRODUCT_CLASS PC ON PC.PRODUCT_CLASS_CODE = P.PRODUCT_CLASS_CODE 
INNER JOIN ADDRESS A ON A.ADDRESS_ID = OC.ADDRESS_ID
WHERE OH.ORDER_STATUS ='Shipped' AND A.COUNTRY NOT IN('India','USA')  
GROUP BY PC.PRODUCT_CLASS_CODE,PC.PRODUCT_CLASS_DESC  
ORDER BY Total_Quantity DESC 
LIMIT 1;   